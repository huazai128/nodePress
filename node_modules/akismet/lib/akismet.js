// Generated by CoffeeScript 1.10.0
(function() {
  var Akismet, domain, request, url;

  request = require('request');

  url = require('url');

  domain = require('domain');

  Akismet = (function() {
    function Akismet(options) {
      this.blog = options.blog || '';
      this.apiKey = options.apiKey;
      this.host = options.host || 'rest.akismet.com';
      this.endPoint = options.endPoint || this.apiKey + '.' + this.host;
      this.port = options.port || 80;
      this.userAgent = options.userAgent || 'Generic Node.js/1.0.0 | Akismet 2.4.0';
      this.charset = options.charset || 'utf-8';
    }

    Akismet.prototype.verifyKey = function(callback) {
      callback || (callback = function() {});
      return this.postRequest(this.host, '/1.1/verify-key', {
        key: this.apiKey,
        blog: this.blog
      }, function(err, status, headers, body) {
        return callback(err, (status >= 200 && status < 300 && body === 'valid' ? true : false));
      });
    };

    Akismet.prototype.checkSpam = function(options, callback) {
      callback || (callback = function() {});
      options.blog = this.blog;
      options.user_agent = this.userAgent;
      return this.postRequest(this.endPoint, '/1.1/comment-check', options, function(err, status, headers, body) {
        return callback(err, (status >= 200 && status < 300 && body === 'true' ? true : false));
      });
    };

    Akismet.prototype.submitSpam = function(options, callback) {
      callback || (callback = function() {});
      options.blog = this.blog;
      options.user_agent = this.userAgent;
      return this.postRequest(this.endPoint, '/1.1/submit-spam', options, function(err, status, headers, body) {
        return callback(err);
      });
    };

    Akismet.prototype.submitHam = function(options, callback) {
      callback || (callback = function() {});
      options.blog = this.blog;
      options.user_agent = this.userAgent;
      return this.postRequest(this.endPoint, '/1.1/submit-ham', options, function(err, status, headers, body) {
        return callback(err);
      });
    };

    Akismet.prototype.postRequest = function(hostname, path, query, callback) {
      var dom, options, requestUrl;
      requestUrl = url.format({
        protocol: this.port === 443 ? 'https' : 'http',
        hostname: hostname,
        pathname: path,
        port: this.port
      });
      options = {
        'url': requestUrl,
        'form': query,
        'headers': {
          'content-type': 'charset=' + this.charset,
          'user-agent': this.userAgent
        }
      };
      dom = domain.create();
      dom.on('error', function(err) {
        return callback(err);
      });
      return dom.run(function() {
        return request.post(options, function(err, message, response) {
          if (err) {
            return callback(err);
          } else {
            return callback(null, message.statusCode, message.headers, response);
          }
        });
      });
    };

    return Akismet;

  })();

  module.exports = {
    client: function(options) {
      return new Akismet(options);
    }
  };

}).call(this);
